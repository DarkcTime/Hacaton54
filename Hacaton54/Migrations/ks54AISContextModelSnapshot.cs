// <auto-generated />
using System;
using Hacaton54.Models.DataModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hacaton54.Migrations
{
    [DbContext(typeof(ks54AISContext))]
    partial class ks54AISContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Hacaton54.Models.DataModel.Attestation", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<short>("DisciplineId")
                        .HasColumnType("smallint");

                    b.Property<short>("EmployeeId")
                        .HasColumnType("smallint");

                    b.Property<byte>("FormId")
                        .HasColumnType("tinyint");

                    b.Property<byte>("GroupId")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("MonthId")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ReadingHours")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.HasIndex("MonthId");

                    b.ToTable("Attestation");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.AttestationForm", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .UseIdentityColumn();

                    b.Property<string>("Form")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AttestationForm");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.AttestationStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AttestationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("HoldingDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ScoreId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttestationId");

                    b.HasIndex("StudentId");

                    b.ToTable("AttestationStudent");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.CourseWork", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeadLine")
                        .HasColumnType("date");

                    b.Property<short?>("EmployeeId")
                        .HasColumnType("smallint");

                    b.Property<byte?>("ScoreId")
                        .HasColumnType("tinyint");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Topic")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ScoreId");

                    b.HasIndex("StudentId");

                    b.ToTable("CourseWork");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Discipline", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .UseIdentityColumn();

                    b.Property<byte>("DisciplineIndexId")
                        .HasColumnType("tinyint");

                    b.Property<string>("DisciplineName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineIndexId");

                    b.ToTable("Discipline");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.DisciplineEmployee", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .UseIdentityColumn();

                    b.Property<byte>("DisciplineId")
                        .HasColumnType("tinyint");

                    b.Property<short>("EmployeeId")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("DisciplineEmployee");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.DisciplineIndex", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .UseIdentityColumn();

                    b.Property<string>("Index")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("DisciplineIndex");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.EducationDepartment", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .UseIdentityColumn();

                    b.Property<byte>("DepartmentNumber")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("EducationDepartment");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.EducationInstitution", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<byte?>("TypeInstitutionId")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.HasIndex("TypeInstitutionId");

                    b.ToTable("EducationInstitution");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.EducationInstitutionType", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .UseIdentityColumn();

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("EducationInstitutionType");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.EducationSertificate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("AvgScore")
                        .HasColumnType("decimal(3,2)");

                    b.Property<int>("EducationInstitutionId")
                        .HasColumnType("int");

                    b.Property<string>("SertificateNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<byte>("TypeId")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("EducationInstitutionId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TypeId");

                    b.ToTable("EducationSertificate");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Employee", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .UseIdentityColumn();

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("E-mail");

                    b.Property<byte?>("GenderId")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<short?>("PositionId")
                        .HasColumnType("smallint");

                    b.Property<string>("Surname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.HasIndex("PositionId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.EmployeePosition", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .UseIdentityColumn();

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("EmployeePosition");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Gender", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .UseIdentityColumn();

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Gender");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Group", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .UseIdentityColumn();

                    b.Property<short>("CuratorId")
                        .HasColumnType("smallint");

                    b.Property<byte>("DepartmentId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("EducationBeginDate")
                        .HasColumnType("date");

                    b.Property<byte>("GroupBase")
                        .HasColumnType("tinyint");

                    b.Property<byte>("GroupNumber")
                        .HasColumnType("tinyint");

                    b.Property<short>("GroupSpecialityId")
                        .HasColumnType("smallint");

                    b.Property<short>("GroupTypeId")
                        .HasColumnType("smallint");

                    b.Property<byte>("StudyingTimeMonth")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("GroupSpecialityId");

                    b.HasIndex("GroupTypeId");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.GroupSpeciality", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .UseIdentityColumn();

                    b.Property<string>("Decryption")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SpecialityCode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("Id");

                    b.ToTable("GroupSpeciality");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.GroupType", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .UseIdentityColumn();

                    b.Property<string>("TypeGroupName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("GroupType");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Month", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("MonthName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Month");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Order", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("OrderTypeId")
                        .HasColumnType("tinyint");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderTypeId");

                    b.HasIndex("StudentId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.OrderType", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .UseIdentityColumn();

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.HasKey("Id");

                    b.ToTable("OrderType");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Parent", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Patronymic")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Parent");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.ParentStudent", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("StudentId");

                    b.ToTable("ParentStudent");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Passport", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("DivisionCode")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<bool>("IsActual")
                        .HasColumnType("bit");

                    b.Property<string>("IssuedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Registration")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Series")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Passport");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("RegionName")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id");

                    b.ToTable("Region");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Role", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .UseIdentityColumn();

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Score", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("ScoreIndex")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Score");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("AdressFact")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("EMail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("E-mail");

                    b.Property<byte>("GenderId")
                        .HasColumnType("tinyint");

                    b.Property<short>("GroupId")
                        .HasColumnType("smallint");

                    b.Property<string>("HousePhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Inn")
                        .HasColumnType("int")
                        .HasColumnName("INN");

                    b.Property<string>("MedPolicy")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Patronymic")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Snils")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("SurName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.TypeSertificate", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TypeSertificate");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<short>("RoleId")
                        .HasColumnType("smallint");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Attestation", b =>
                {
                    b.HasOne("Hacaton54.Models.DataModel.AttestationForm", "Form")
                        .WithMany("Attestations")
                        .HasForeignKey("FormId")
                        .HasConstraintName("FK_Attestation_AttestationForm")
                        .IsRequired();

                    b.HasOne("Hacaton54.Models.DataModel.Month", "Month")
                        .WithMany("Attestations")
                        .HasForeignKey("MonthId")
                        .HasConstraintName("FK_Attestation_Month");

                    b.Navigation("Form");

                    b.Navigation("Month");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.AttestationStudent", b =>
                {
                    b.HasOne("Hacaton54.Models.DataModel.Attestation", "Attestation")
                        .WithMany("AttestationStudents")
                        .HasForeignKey("AttestationId")
                        .HasConstraintName("FK_AttestationStudent_Attestation")
                        .IsRequired();

                    b.HasOne("Hacaton54.Models.DataModel.Student", "Student")
                        .WithMany("AttestationStudents")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_AttestationStudent_Student")
                        .IsRequired();

                    b.Navigation("Attestation");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.CourseWork", b =>
                {
                    b.HasOne("Hacaton54.Models.DataModel.Employee", "Employee")
                        .WithMany("CourseWorks")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_CourseWork_Employee");

                    b.HasOne("Hacaton54.Models.DataModel.Score", "Score")
                        .WithMany("CourseWorks")
                        .HasForeignKey("ScoreId")
                        .HasConstraintName("FK_CourseWork_Score");

                    b.HasOne("Hacaton54.Models.DataModel.Student", "Student")
                        .WithMany("CourseWorks")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_CourseWork_Student")
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Score");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Discipline", b =>
                {
                    b.HasOne("Hacaton54.Models.DataModel.DisciplineIndex", "DisciplineIndex")
                        .WithMany("Disciplines")
                        .HasForeignKey("DisciplineIndexId")
                        .HasConstraintName("FK_Discipline_DisciplineIndex")
                        .IsRequired();

                    b.Navigation("DisciplineIndex");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.DisciplineEmployee", b =>
                {
                    b.HasOne("Hacaton54.Models.DataModel.Discipline", "Discipline")
                        .WithMany("DisciplineEmployees")
                        .HasForeignKey("DisciplineId")
                        .HasConstraintName("FK_DisciplineEmployee_Discipline")
                        .IsRequired();

                    b.HasOne("Hacaton54.Models.DataModel.Employee", "Employee")
                        .WithMany("DisciplineEmployees")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_DisciplineEmployee_Employee")
                        .IsRequired();

                    b.Navigation("Discipline");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.EducationInstitution", b =>
                {
                    b.HasOne("Hacaton54.Models.DataModel.Region", "Region")
                        .WithMany("EducationInstitutions")
                        .HasForeignKey("RegionId")
                        .HasConstraintName("FK_EducationInstitution_Region");

                    b.HasOne("Hacaton54.Models.DataModel.EducationInstitutionType", "TypeInstitution")
                        .WithMany("EducationInstitutions")
                        .HasForeignKey("TypeInstitutionId")
                        .HasConstraintName("FK_EducationInstitution_EducationInstitutionType");

                    b.Navigation("Region");

                    b.Navigation("TypeInstitution");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.EducationSertificate", b =>
                {
                    b.HasOne("Hacaton54.Models.DataModel.EducationInstitution", "EducationInstitution")
                        .WithMany("EducationSertificates")
                        .HasForeignKey("EducationInstitutionId")
                        .HasConstraintName("FK_EducationSertificate_EducationInstitution")
                        .IsRequired();

                    b.HasOne("Hacaton54.Models.DataModel.Student", "Student")
                        .WithMany("EducationSertificates")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_EducationSertificate_Student")
                        .IsRequired();

                    b.HasOne("Hacaton54.Models.DataModel.TypeSertificate", "Type")
                        .WithMany("EducationSertificates")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_EducationSertificate_TypeSertificate")
                        .IsRequired();

                    b.Navigation("EducationInstitution");

                    b.Navigation("Student");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Employee", b =>
                {
                    b.HasOne("Hacaton54.Models.DataModel.Gender", "Gender")
                        .WithMany("Employees")
                        .HasForeignKey("GenderId")
                        .HasConstraintName("FK_Employee_Gender");

                    b.HasOne("Hacaton54.Models.DataModel.EmployeePosition", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId")
                        .HasConstraintName("FK_Employee_EmployeePosition");

                    b.Navigation("Gender");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Group", b =>
                {
                    b.HasOne("Hacaton54.Models.DataModel.EducationDepartment", "Department")
                        .WithMany("Groups")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Group_EducationDepartment")
                        .IsRequired();

                    b.HasOne("Hacaton54.Models.DataModel.GroupSpeciality", "GroupSpeciality")
                        .WithMany("Groups")
                        .HasForeignKey("GroupSpecialityId")
                        .HasConstraintName("FK_Group_GroupSpeciality")
                        .IsRequired();

                    b.HasOne("Hacaton54.Models.DataModel.GroupType", "GroupType")
                        .WithMany("Groups")
                        .HasForeignKey("GroupTypeId")
                        .HasConstraintName("FK_Group_GroupType")
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("GroupSpeciality");

                    b.Navigation("GroupType");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Order", b =>
                {
                    b.HasOne("Hacaton54.Models.DataModel.OrderType", "OrderType")
                        .WithMany("Orders")
                        .HasForeignKey("OrderTypeId")
                        .HasConstraintName("FK_Order_OrderType")
                        .IsRequired();

                    b.HasOne("Hacaton54.Models.DataModel.Student", "Student")
                        .WithMany("Orders")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Order_Student")
                        .IsRequired();

                    b.Navigation("OrderType");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.ParentStudent", b =>
                {
                    b.HasOne("Hacaton54.Models.DataModel.Parent", "Parent")
                        .WithMany("ParentStudents")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_ParentStudent_Parent")
                        .IsRequired();

                    b.HasOne("Hacaton54.Models.DataModel.Student", "Student")
                        .WithMany("ParentStudents")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_ParentStudent_Student")
                        .IsRequired();

                    b.Navigation("Parent");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Passport", b =>
                {
                    b.HasOne("Hacaton54.Models.DataModel.Student", "Student")
                        .WithMany("Passports")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Passport_Student")
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Student", b =>
                {
                    b.HasOne("Hacaton54.Models.DataModel.Gender", "Gender")
                        .WithMany("Students")
                        .HasForeignKey("GenderId")
                        .HasConstraintName("FK_Student_Gender")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hacaton54.Models.DataModel.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_Student_Group")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hacaton54.Models.DataModel.User", "User")
                        .WithMany("Students")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Student_User");

                    b.Navigation("Gender");

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.User", b =>
                {
                    b.HasOne("Hacaton54.Models.DataModel.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_User_Role")
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Attestation", b =>
                {
                    b.Navigation("AttestationStudents");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.AttestationForm", b =>
                {
                    b.Navigation("Attestations");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Discipline", b =>
                {
                    b.Navigation("DisciplineEmployees");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.DisciplineIndex", b =>
                {
                    b.Navigation("Disciplines");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.EducationDepartment", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.EducationInstitution", b =>
                {
                    b.Navigation("EducationSertificates");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.EducationInstitutionType", b =>
                {
                    b.Navigation("EducationInstitutions");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Employee", b =>
                {
                    b.Navigation("CourseWorks");

                    b.Navigation("DisciplineEmployees");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.EmployeePosition", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Gender", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Group", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.GroupSpeciality", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.GroupType", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Month", b =>
                {
                    b.Navigation("Attestations");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.OrderType", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Parent", b =>
                {
                    b.Navigation("ParentStudents");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Region", b =>
                {
                    b.Navigation("EducationInstitutions");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Score", b =>
                {
                    b.Navigation("CourseWorks");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.Student", b =>
                {
                    b.Navigation("AttestationStudents");

                    b.Navigation("CourseWorks");

                    b.Navigation("EducationSertificates");

                    b.Navigation("Orders");

                    b.Navigation("ParentStudents");

                    b.Navigation("Passports");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.TypeSertificate", b =>
                {
                    b.Navigation("EducationSertificates");
                });

            modelBuilder.Entity("Hacaton54.Models.DataModel.User", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
